State 19 conflicts: 3 shift/reduce
State 45 conflicts: 3 shift/reduce
State 87 conflicts: 9 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 121 conflicts: 9 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: mainc cdcls
    2     | ε

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    4 cdcls: cdcl cdcls
    5      | ε

    6 cdcl: CLASS ID LBP vdcls mdcls RBP

    7 vdcls: vdcl vdcls
    8      | ε

    9 vdcl: type ID SEMI

   10 mdcls: mdcl mdcls
   11      | ε

   12 mdcl: PUB type ID LP formals RP LBP vdcls stmts RETURN exp SEMI RBP

   13 formals: type ID frest
   14        | ε

   15 frest: COMMA type ID frest
   16      | ε

   17 type: INT LSP RSP
   18     | BOOLEAN
   19     | INT
   20     | ID

   21 stmt: LBP stmts RBP
   22     | IF LP exp RP stmt ELSE stmt
   23     | WHILE LP exp RP stmt
   24     | PRINT LP exp RP SEMI
   25     | ID ASSIGN exp SEMI
   26     | ID LSP exp RSP ASSIGN exp SEMI
   27     | vdcl
   28     | LP exp RP

   29 stmts: stmt stmts
   30      | ε

   31 exp: exp ADD exp
   32    | exp MINUS exp
   33    | exp TIMES exp
   34    | exp AND exp
   35    | exp OR exp
   36    | exp LT exp
   37    | exp LE exp
   38    | exp EQ exp
   39    | ID LSP exp RSP
   40    | ID LP explist RP
   41    | ID exp RP
   42    | exp DOT exp
   43    | LIT
   44    | TRUE
   45    | FALSE
   46    | ID
   47    | THIS
   48    | NEW INT LSP exp RSP
   49    | NEW ID LP RP
   50    | NOT exp
   51    | exp TIMES stmt

   52 explist: exp exprests
   53        | ε

   54 exprests: exprest exprests
   55         | ε

   56 exprest: COMMA exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CLASS (258) 3 6
    PUB (259) 3 12
    STATIC (260) 3
    AND (261) 34
    OR (262) 35
    LT (263) 36
    LE (264) 37
    EQ (265) 38
    ADD (266) 31
    MINUS (267) 32
    TIMES (268) 33 51
    LBP (269) 3 6 12 21
    RBP (270) 3 6 12 21
    LSP (271) 3 17 26 39 48
    RSP (272) 3 17 26 39 48
    LP (273) 3 12 22 23 24 28 40 49
    RP (274) 3 12 22 23 24 28 40 41 49
    INT (275) 17 19 48
    BOOLEAN (276) 18
    IF (277) 22
    ELSE (278) 22
    WHILE (279) 23
    PRINT (280) 24
    ASSIGN (281) 25 26
    VOID (282) 3
    MAIN (283) 3
    STR (284) 3
    RETURN (285) 12
    SEMI (286) 9 12 24 25 26
    COMMA (287) 15 56
    THIS (288) 47
    NEW (289) 48 49
    DOT (290) 42
    ID (291) 3 6 9 12 13 15 20 25 26 39 40 41 46 49
    LIT (292) 43
    TRUE (293) 44
    FALSE (294) 45
    NOT (295) 50


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    prog (42)
        on left: 1 2
        on right: 0
    mainc (43)
        on left: 3
        on right: 1
    cdcls (44)
        on left: 4 5
        on right: 1 4
    cdcl (45)
        on left: 6
        on right: 4
    vdcls (46)
        on left: 7 8
        on right: 6 7 12
    vdcl (47)
        on left: 9
        on right: 7 27
    mdcls (48)
        on left: 10 11
        on right: 6 10
    mdcl (49)
        on left: 12
        on right: 10
    formals (50)
        on left: 13 14
        on right: 12
    frest (51)
        on left: 15 16
        on right: 13 15
    type (52)
        on left: 17 18 19 20
        on right: 9 12 13 15
    stmt (53)
        on left: 21 22 23 24 25 26 27 28
        on right: 22 23 29 51
    stmts (54)
        on left: 29 30
        on right: 3 12 21 29
    exp (55)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 12 22 23 24 25 26 28 31 32 33 34 35 36 37 38 39 41 42 48 50 51 52 56
    explist (56)
        on left: 52 53
        on right: 40
    exprests (57)
        on left: 54 55
        on right: 52 54
    exprest (58)
        on left: 56
        on right: 54


State 0

    0 $accept: • prog $end
    1 prog: • mainc cdcls
    2     | ε •  [$end]
    3 mainc: • CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (prog)

    prog   go to state 2
    mainc  go to state 3


State 1

    3 mainc: CLASS • ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    ID  shift, and go to state 4


State 2

    0 $accept: prog • $end

    $end  shift, and go to state 5


State 3

    1 prog: mainc • cdcls
    4 cdcls: • cdcl cdcls
    5      | ε •  [$end]
    6 cdcl: • CLASS ID LBP vdcls mdcls RBP

    CLASS  shift, and go to state 6

    $default  reduce using rule 5 (cdcls)

    cdcls  go to state 7
    cdcl   go to state 8


State 4

    3 mainc: CLASS ID • LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    LBP  shift, and go to state 9


State 5

    0 $accept: prog $end •

    $default  accept


State 6

    6 cdcl: CLASS • ID LBP vdcls mdcls RBP

    ID  shift, and go to state 10


State 7

    1 prog: mainc cdcls •

    $default  reduce using rule 1 (prog)


State 8

    4 cdcls: • cdcl cdcls
    4      | cdcl • cdcls
    5      | ε •  [$end]
    6 cdcl: • CLASS ID LBP vdcls mdcls RBP

    CLASS  shift, and go to state 6

    $default  reduce using rule 5 (cdcls)

    cdcls  go to state 11
    cdcl   go to state 8


State 9

    3 mainc: CLASS ID LBP • PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    PUB  shift, and go to state 12


State 10

    6 cdcl: CLASS ID • LBP vdcls mdcls RBP

    LBP  shift, and go to state 13


State 11

    4 cdcls: cdcl cdcls •

    $default  reduce using rule 4 (cdcls)


State 12

    3 mainc: CLASS ID LBP PUB • STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    STATIC  shift, and go to state 14


State 13

    6 cdcl: CLASS ID LBP • vdcls mdcls RBP
    7 vdcls: • vdcl vdcls
    8      | ε •  [PUB, RBP]
    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 8 (vdcls)

    vdcls  go to state 18
    vdcl   go to state 19
    type   go to state 20


State 14

    3 mainc: CLASS ID LBP PUB STATIC • VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    VOID  shift, and go to state 21


State 15

   17 type: INT • LSP RSP
   19     | INT •  [ID]

    LSP  shift, and go to state 22

    $default  reduce using rule 19 (type)


State 16

   18 type: BOOLEAN •

    $default  reduce using rule 18 (type)


State 17

   20 type: ID •

    $default  reduce using rule 20 (type)


State 18

    6 cdcl: CLASS ID LBP vdcls • mdcls RBP
   10 mdcls: • mdcl mdcls
   11      | ε •  [RBP]
   12 mdcl: • PUB type ID LP formals RP LBP vdcls stmts RETURN exp SEMI RBP

    PUB  shift, and go to state 23

    $default  reduce using rule 11 (mdcls)

    mdcls  go to state 24
    mdcl   go to state 25


State 19

    7 vdcls: • vdcl vdcls
    7      | vdcl • vdcls
    8      | ε •  [PUB, LBP, RBP, LP, INT, BOOLEAN, IF, WHILE, PRINT, RETURN, ID]
    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    INT       [reduce using rule 8 (vdcls)]
    BOOLEAN   [reduce using rule 8 (vdcls)]
    ID        [reduce using rule 8 (vdcls)]
    $default  reduce using rule 8 (vdcls)

    vdcls  go to state 26
    vdcl   go to state 19
    type   go to state 20

    shift/reduce conflict on token INT:
        8 vdcls: ε •
       17 type: • INT LSP RSP
      Example: PUB type ID LP formals RP LBP vdcl • INT LSP RSP ID SEMI vdcl stmts RETURN exp SEMI RBP
      Shift derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls                                                            stmts RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls
                                                      ↳ 7: vdcl                             vdcls
                                                           ↳ 9: type                ID SEMI ↳ 7: vdcl vdcls
                                                                ↳ 17: • INT LSP RSP                   ↳ 7: ε
      Reduce derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls              stmts                                                             RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls    ↳ 29: stmt                                 stmts
                                                      ↳ 8: ε •       ↳ 27: vdcl                           ↳ 29: stmt       stmts
                                                                           ↳ 9: type              ID SEMI       ↳ 27: vdcl
                                                                                ↳ 17: INT LSP RSP

    shift/reduce conflict on token BOOLEAN:
        8 vdcls: ε •
       18 type: • BOOLEAN
      Example: PUB type ID LP formals RP LBP vdcl • BOOLEAN ID SEMI vdcl stmts RETURN exp SEMI RBP
      Shift derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls                                                        stmts RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls
                                                      ↳ 7: vdcl                         vdcls
                                                           ↳ 9: type            ID SEMI ↳ 7: vdcl vdcls
                                                                ↳ 18: • BOOLEAN                   ↳ 7: ε
      Reduce derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls              stmts                                                         RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls    ↳ 29: stmt                             stmts
                                                      ↳ 8: ε •       ↳ 27: vdcl                       ↳ 29: stmt       stmts
                                                                           ↳ 9: type          ID SEMI       ↳ 27: vdcl
                                                                                ↳ 18: BOOLEAN

    shift/reduce conflict on token INT:
        8 vdcls: ε •
       19 type: • INT
      Example: PUB type ID LP formals RP LBP vdcl • INT ID SEMI vdcl stmts RETURN exp SEMI RBP
      Shift derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls                                                    stmts RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls
                                                      ↳ 7: vdcl                     vdcls
                                                           ↳ 9: type        ID SEMI ↳ 7: vdcl vdcls
                                                                ↳ 19: • INT                   ↳ 7: ε
      Reduce derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls              stmts                                                     RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls    ↳ 29: stmt                         stmts
                                                      ↳ 8: ε •       ↳ 27: vdcl                   ↳ 29: stmt       stmts
                                                                           ↳ 9: type      ID SEMI       ↳ 27: vdcl
                                                                                ↳ 19: INT

    shift/reduce conflict on token ID:
        8 vdcls: ε •
       20 type: • ID
      Example: PUB type ID LP formals RP LBP vdcl • ID ID SEMI vdcl stmts RETURN exp SEMI RBP
      Shift derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls                                                   stmts RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls
                                                      ↳ 7: vdcl                    vdcls
                                                           ↳ 9: type       ID SEMI ↳ 7: vdcl vdcls
                                                                ↳ 20: • ID                   ↳ 7: ε
      Reduce derivation
        mdcl
        ↳ 12: PUB type ID LP formals RP LBP vdcls              stmts                                                    RETURN exp SEMI RBP
                                            ↳ 7: vdcl vdcls    ↳ 29: stmt                        stmts
                                                      ↳ 8: ε •       ↳ 27: vdcl                  ↳ 29: stmt       stmts
                                                                           ↳ 9: type     ID SEMI       ↳ 27: vdcl
                                                                                ↳ 20: ID



State 20

    9 vdcl: type • ID SEMI

    ID  shift, and go to state 27


State 21

    3 mainc: CLASS ID LBP PUB STATIC VOID • MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP

    MAIN  shift, and go to state 28


State 22

   17 type: INT LSP • RSP

    RSP  shift, and go to state 29


State 23

   12 mdcl: PUB • type ID LP formals RP LBP vdcls stmts RETURN exp SEMI RBP
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    type  go to state 30


State 24

    6 cdcl: CLASS ID LBP vdcls mdcls • RBP

    RBP  shift, and go to state 31


State 25

   10 mdcls: • mdcl mdcls
   10      | mdcl • mdcls
   11      | ε •  [RBP]
   12 mdcl: • PUB type ID LP formals RP LBP vdcls stmts RETURN exp SEMI RBP

    PUB  shift, and go to state 23

    $default  reduce using rule 11 (mdcls)

    mdcls  go to state 32
    mdcl   go to state 25


State 26

    7 vdcls: vdcl vdcls •

    $default  reduce using rule 7 (vdcls)


State 27

    9 vdcl: type ID • SEMI

    SEMI  shift, and go to state 33


State 28

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN • LP STR LSP RSP ID RP LBP stmts RBP RBP

    LP  shift, and go to state 34


State 29

   17 type: INT LSP RSP •

    $default  reduce using rule 17 (type)


State 30

   12 mdcl: PUB type • ID LP formals RP LBP vdcls stmts RETURN exp SEMI RBP

    ID  shift, and go to state 35


State 31

    6 cdcl: CLASS ID LBP vdcls mdcls RBP •

    $default  reduce using rule 6 (cdcl)


State 32

   10 mdcls: mdcl mdcls •

    $default  reduce using rule 10 (mdcls)


State 33

    9 vdcl: type ID SEMI •

    $default  reduce using rule 9 (vdcl)


State 34

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP • STR LSP RSP ID RP LBP stmts RBP RBP

    STR  shift, and go to state 36


State 35

   12 mdcl: PUB type ID • LP formals RP LBP vdcls stmts RETURN exp SEMI RBP

    LP  shift, and go to state 37


State 36

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR • LSP RSP ID RP LBP stmts RBP RBP

    LSP  shift, and go to state 38


State 37

   12 mdcl: PUB type ID LP • formals RP LBP vdcls stmts RETURN exp SEMI RBP
   13 formals: • type ID frest
   14        | ε •  [RP]
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 14 (formals)

    formals  go to state 39
    type     go to state 40


State 38

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP • RSP ID RP LBP stmts RBP RBP

    RSP  shift, and go to state 41


State 39

   12 mdcl: PUB type ID LP formals • RP LBP vdcls stmts RETURN exp SEMI RBP

    RP  shift, and go to state 42


State 40

   13 formals: type • ID frest

    ID  shift, and go to state 43


State 41

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP • ID RP LBP stmts RBP RBP

    ID  shift, and go to state 44


State 42

   12 mdcl: PUB type ID LP formals RP • LBP vdcls stmts RETURN exp SEMI RBP

    LBP  shift, and go to state 45


State 43

   13 formals: type ID • frest
   15 frest: • COMMA type ID frest
   16      | ε •  [RP]

    COMMA  shift, and go to state 46

    $default  reduce using rule 16 (frest)

    frest  go to state 47


State 44

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID • RP LBP stmts RBP RBP

    RP  shift, and go to state 48


State 45

    7 vdcls: • vdcl vdcls
    8      | ε •  [LBP, LP, INT, BOOLEAN, IF, WHILE, PRINT, RETURN, ID]
    9 vdcl: • type ID SEMI
   12 mdcl: PUB type ID LP formals RP LBP • vdcls stmts RETURN exp SEMI RBP
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    INT       [reduce using rule 8 (vdcls)]
    BOOLEAN   [reduce using rule 8 (vdcls)]
    ID        [reduce using rule 8 (vdcls)]
    $default  reduce using rule 8 (vdcls)

    vdcls  go to state 49
    vdcl   go to state 19
    type   go to state 20

    shift/reduce conflict on token INT:
        8 vdcls: ε •
       17 type: • INT LSP RSP
      First example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • INT LSP RSP ID SEMI vdcls stmts RETURN exp SEMI RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                                        $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                                  cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcl                                                                                                      RBP
                                                     ↳ 12: PUB type ID LP formals RP LBP vdcls                                       stmts RETURN exp SEMI RBP
                                                                                         ↳ 7: vdcl                             vdcls
                                                                                              ↳ 9: type                ID SEMI
                                                                                                   ↳ 17: • INT LSP RSP
      Second example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • INT LSP RSP ID SEMI stmts RETURN exp SEMI RBP mdcls RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                                            $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                                                      cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcls                                                                                                                         RBP
                                                     ↳ 10: mdcl                                                                                                              mdcls
                                                           ↳ 12: PUB type ID LP formals RP LBP vdcls    stmts                                            RETURN exp SEMI RBP
                                                                                               ↳ 8: ε • ↳ 29: stmt                                 stmts
                                                                                                              ↳ 27: vdcl
                                                                                                                    ↳ 9: type              ID SEMI
                                                                                                                         ↳ 17: INT LSP RSP

    shift/reduce conflict on token BOOLEAN:
        8 vdcls: ε •
       18 type: • BOOLEAN
      First example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • BOOLEAN ID SEMI vdcls stmts RETURN exp SEMI RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                                    $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                              cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcl                                                                                                  RBP
                                                     ↳ 12: PUB type ID LP formals RP LBP vdcls                                   stmts RETURN exp SEMI RBP
                                                                                         ↳ 7: vdcl                         vdcls
                                                                                              ↳ 9: type            ID SEMI
                                                                                                   ↳ 18: • BOOLEAN
      Second example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • BOOLEAN ID SEMI stmts RETURN exp SEMI RBP mdcls RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                                        $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                                                  cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcls                                                                                                                     RBP
                                                     ↳ 10: mdcl                                                                                                          mdcls
                                                           ↳ 12: PUB type ID LP formals RP LBP vdcls    stmts                                        RETURN exp SEMI RBP
                                                                                               ↳ 8: ε • ↳ 29: stmt                             stmts
                                                                                                              ↳ 27: vdcl
                                                                                                                    ↳ 9: type          ID SEMI
                                                                                                                         ↳ 18: BOOLEAN

    shift/reduce conflict on token INT:
        8 vdcls: ε •
       19 type: • INT
      First example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • INT ID SEMI vdcls stmts RETURN exp SEMI RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                                $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                          cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcl                                                                                              RBP
                                                     ↳ 12: PUB type ID LP formals RP LBP vdcls                               stmts RETURN exp SEMI RBP
                                                                                         ↳ 7: vdcl                     vdcls
                                                                                              ↳ 9: type        ID SEMI
                                                                                                   ↳ 19: • INT
      Second example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • INT LSP RSP ID SEMI stmts RETURN exp SEMI RBP mdcls RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                                            $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                                                      cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcls                                                                                                                         RBP
                                                     ↳ 10: mdcl                                                                                                              mdcls
                                                           ↳ 12: PUB type ID LP formals RP LBP vdcls    stmts                                            RETURN exp SEMI RBP
                                                                                               ↳ 8: ε • ↳ 29: stmt                                 stmts
                                                                                                              ↳ 27: vdcl
                                                                                                                    ↳ 9: type              ID SEMI
                                                                                                                         ↳ 17: INT LSP RSP

    shift/reduce conflict on token ID:
        8 vdcls: ε •
       20 type: • ID
      First example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • ID ID SEMI vdcls stmts RETURN exp SEMI RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                               $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                         cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcl                                                                                             RBP
                                                     ↳ 12: PUB type ID LP formals RP LBP vdcls                              stmts RETURN exp SEMI RBP
                                                                                         ↳ 7: vdcl                    vdcls
                                                                                              ↳ 9: type       ID SEMI
                                                                                                   ↳ 20: • ID
      Second example: mainc CLASS ID LBP vdcls PUB type ID LP formals RP LBP • ID ASSIGN exp SEMI stmts RETURN exp SEMI RBP mdcls RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                                $end
             ↳ 1: mainc cdcls
                        ↳ 4: cdcl                                                                                                                                          cdcls
                             ↳ 6: CLASS ID LBP vdcls mdcls                                                                                                             RBP
                                                     ↳ 10: mdcl                                                                                                  mdcls
                                                           ↳ 12: PUB type ID LP formals RP LBP vdcls    stmts                                RETURN exp SEMI RBP
                                                                                               ↳ 8: ε • ↳ 29: stmt                     stmts
                                                                                                              ↳ 25: ID ASSIGN exp SEMI



State 46

   15 frest: COMMA • type ID frest
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    type  go to state 50


State 47

   13 formals: type ID frest •

    $default  reduce using rule 13 (formals)


State 48

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP • LBP stmts RBP RBP

    LBP  shift, and go to state 51


State 49

    9 vdcl: • type ID SEMI
   12 mdcl: PUB type ID LP formals RP LBP vdcls • stmts RETURN exp SEMI RBP
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP
   29 stmts: • stmt stmts
   30      | ε •  [RETURN]

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    $default  reduce using rule 30 (stmts)

    vdcl   go to state 58
    type   go to state 20
    stmt   go to state 59
    stmts  go to state 60


State 50

   15 frest: COMMA type • ID frest

    ID  shift, and go to state 61


State 51

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP • stmts RBP RBP
    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP
   29 stmts: • stmt stmts
   30      | ε •  [RBP]

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    $default  reduce using rule 30 (stmts)

    vdcl   go to state 58
    type   go to state 20
    stmt   go to state 59
    stmts  go to state 62


State 52

    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   21     | LBP • stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP
   29 stmts: • stmt stmts
   30      | ε •  [RBP]

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    $default  reduce using rule 30 (stmts)

    vdcl   go to state 58
    type   go to state 20
    stmt   go to state 59
    stmts  go to state 63


State 53

   28 stmt: LP • exp RP
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 71


State 54

   22 stmt: IF • LP exp RP stmt ELSE stmt

    LP  shift, and go to state 72


State 55

   23 stmt: WHILE • LP exp RP stmt

    LP  shift, and go to state 73


State 56

   24 stmt: PRINT • LP exp RP SEMI

    LP  shift, and go to state 74


State 57

   20 type: ID •  [ID]
   25 stmt: ID • ASSIGN exp SEMI
   26     | ID • LSP exp RSP ASSIGN exp SEMI

    LSP     shift, and go to state 75
    ASSIGN  shift, and go to state 76

    $default  reduce using rule 20 (type)


State 58

   27 stmt: vdcl •

    $default  reduce using rule 27 (stmt)


State 59

    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP
   29 stmts: • stmt stmts
   29      | stmt • stmts
   30      | ε •  [RBP, RETURN]

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    $default  reduce using rule 30 (stmts)

    vdcl   go to state 58
    type   go to state 20
    stmt   go to state 59
    stmts  go to state 77


State 60

   12 mdcl: PUB type ID LP formals RP LBP vdcls stmts • RETURN exp SEMI RBP

    RETURN  shift, and go to state 78


State 61

   15 frest: • COMMA type ID frest
   15      | COMMA type ID • frest
   16      | ε •  [RP]

    COMMA  shift, and go to state 46

    $default  reduce using rule 16 (frest)

    frest  go to state 79


State 62

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts • RBP RBP

    RBP  shift, and go to state 80


State 63

   21 stmt: LBP stmts • RBP

    RBP  shift, and go to state 81


State 64

   47 exp: THIS •

    $default  reduce using rule 47 (exp)


State 65

   48 exp: NEW • INT LSP exp RSP
   49    | NEW • ID LP RP

    INT  shift, and go to state 82
    ID   shift, and go to state 83


State 66

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   39    | ID • LSP exp RSP
   40    | • ID LP explist RP
   40    | ID • LP explist RP
   41    | • ID exp RP
   41    | ID • exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   46    | ID •  [AND, OR, LT, LE, EQ, ADD, MINUS, TIMES, RSP, RP, SEMI, COMMA, DOT]
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    LSP    shift, and go to state 84
    LP     shift, and go to state 85
    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    $default  reduce using rule 46 (exp)

    exp  go to state 86


State 67

   43 exp: LIT •

    $default  reduce using rule 43 (exp)


State 68

   44 exp: TRUE •

    $default  reduce using rule 44 (exp)


State 69

   45 exp: FALSE •

    $default  reduce using rule 45 (exp)


State 70

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   50    | NOT • exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 87


State 71

   28 stmt: LP exp • RP
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RP     shift, and go to state 96
    DOT    shift, and go to state 97


State 72

   22 stmt: IF LP • exp RP stmt ELSE stmt
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 98


State 73

   23 stmt: WHILE LP • exp RP stmt
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 99


State 74

   24 stmt: PRINT LP • exp RP SEMI
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 100


State 75

   26 stmt: ID LSP • exp RSP ASSIGN exp SEMI
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 101


State 76

   25 stmt: ID ASSIGN • exp SEMI
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 102


State 77

   29 stmts: stmt stmts •

    $default  reduce using rule 29 (stmts)


State 78

   12 mdcl: PUB type ID LP formals RP LBP vdcls stmts RETURN • exp SEMI RBP
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 103


State 79

   15 frest: COMMA type ID frest •

    $default  reduce using rule 15 (frest)


State 80

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP • RBP

    RBP  shift, and go to state 104


State 81

   21 stmt: LBP stmts RBP •

    $default  reduce using rule 21 (stmt)


State 82

   48 exp: NEW INT • LSP exp RSP

    LSP  shift, and go to state 105


State 83

   49 exp: NEW ID • LP RP

    LP  shift, and go to state 106


State 84

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   39    | ID LSP • exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 107


State 85

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   40    | ID LP • explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt
   52 explist: • exp exprests
   53        | ε •  [RP]

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    $default  reduce using rule 53 (explist)

    exp      go to state 108
    explist  go to state 109


State 86

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   41    | ID exp • RP
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RP     shift, and go to state 110
    DOT    shift, and go to state 97


State 87

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   50    | NOT exp •  [AND, OR, LT, LE, EQ, ADD, MINUS, TIMES, RSP, RP, SEMI, COMMA, DOT]
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    AND       [reduce using rule 50 (exp)]
    OR        [reduce using rule 50 (exp)]
    LT        [reduce using rule 50 (exp)]
    LE        [reduce using rule 50 (exp)]
    EQ        [reduce using rule 50 (exp)]
    ADD       [reduce using rule 50 (exp)]
    MINUS     [reduce using rule 50 (exp)]
    TIMES     [reduce using rule 50 (exp)]
    DOT       [reduce using rule 50 (exp)]
    $default  reduce using rule 50 (exp)

    shift/reduce conflict on token ADD:
       50 exp: NOT exp •
       31 exp: exp • ADD exp
      Example: NOT exp • ADD exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 31: exp • ADD exp
      Reduce derivation
        exp
        ↳ 31: exp             ADD exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token MINUS:
       50 exp: NOT exp •
       32 exp: exp • MINUS exp
      Example: NOT exp • MINUS exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 32: exp • MINUS exp
      Reduce derivation
        exp
        ↳ 32: exp             MINUS exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token TIMES:
       50 exp: NOT exp •
       33 exp: exp • TIMES exp
      Example: NOT exp • TIMES exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 33: exp • TIMES exp
      Reduce derivation
        exp
        ↳ 33: exp             TIMES exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token AND:
       50 exp: NOT exp •
       34 exp: exp • AND exp
      Example: NOT exp • AND exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 34: exp • AND exp
      Reduce derivation
        exp
        ↳ 34: exp             AND exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token OR:
       50 exp: NOT exp •
       35 exp: exp • OR exp
      Example: NOT exp • OR exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 35: exp • OR exp
      Reduce derivation
        exp
        ↳ 35: exp             OR exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token LT:
       50 exp: NOT exp •
       36 exp: exp • LT exp
      Example: NOT exp • LT exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 36: exp • LT exp
      Reduce derivation
        exp
        ↳ 36: exp             LT exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token LE:
       50 exp: NOT exp •
       37 exp: exp • LE exp
      Example: NOT exp • LE exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 37: exp • LE exp
      Reduce derivation
        exp
        ↳ 37: exp             LE exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token EQ:
       50 exp: NOT exp •
       38 exp: exp • EQ exp
      Example: NOT exp • EQ exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 38: exp • EQ exp
      Reduce derivation
        exp
        ↳ 38: exp             EQ exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token DOT:
       50 exp: NOT exp •
       42 exp: exp • DOT exp
      Example: NOT exp • DOT exp
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp             DOT exp
              ↳ 50: NOT exp •

    shift/reduce conflict on token TIMES:
       50 exp: NOT exp •
       51 exp: exp • TIMES stmt
      Example: NOT exp • TIMES stmt
      Shift derivation
        exp
        ↳ 50: NOT exp
                  ↳ 51: exp • TIMES stmt
      Reduce derivation
        exp
        ↳ 51: exp             TIMES stmt
              ↳ 50: NOT exp •



State 88

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   34    | exp AND • exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 111


State 89

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   35    | exp OR • exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 112


State 90

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   36    | exp LT • exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 113


State 91

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   37    | exp LE • exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 114


State 92

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   38    | exp EQ • exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 115


State 93

   31 exp: • exp ADD exp
   31    | exp ADD • exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 116


State 94

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   32    | exp MINUS • exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 117


State 95

    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   33    | exp TIMES • exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt
   51    | exp TIMES • stmt

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    THIS     shift, and go to state 64
    NEW      shift, and go to state 65
    ID       shift, and go to state 118
    LIT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    NOT      shift, and go to state 70

    vdcl  go to state 58
    type  go to state 20
    stmt  go to state 119
    exp   go to state 120


State 96

   28 stmt: LP exp RP •

    $default  reduce using rule 28 (stmt)


State 97

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   42    | exp DOT • exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 121


State 98

   22 stmt: IF LP exp • RP stmt ELSE stmt
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RP     shift, and go to state 122
    DOT    shift, and go to state 97


State 99

   23 stmt: WHILE LP exp • RP stmt
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RP     shift, and go to state 123
    DOT    shift, and go to state 97


State 100

   24 stmt: PRINT LP exp • RP SEMI
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RP     shift, and go to state 124
    DOT    shift, and go to state 97


State 101

   26 stmt: ID LSP exp • RSP ASSIGN exp SEMI
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RSP    shift, and go to state 125
    DOT    shift, and go to state 97


State 102

   25 stmt: ID ASSIGN exp • SEMI
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    SEMI   shift, and go to state 126
    DOT    shift, and go to state 97


State 103

   12 mdcl: PUB type ID LP formals RP LBP vdcls stmts RETURN exp • SEMI RBP
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    SEMI   shift, and go to state 127
    DOT    shift, and go to state 97


State 104

    3 mainc: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts RBP RBP •

    $default  reduce using rule 3 (mainc)


State 105

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   48    | NEW INT LSP • exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 128


State 106

   49 exp: NEW ID LP • RP

    RP  shift, and go to state 129


State 107

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   39    | ID LSP exp • RSP
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RSP    shift, and go to state 130
    DOT    shift, and go to state 97


State 108

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt
   52 explist: exp • exprests
   54 exprests: • exprest exprests
   55         | ε •  [RP]
   56 exprest: • COMMA exp

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    COMMA  shift, and go to state 131
    DOT    shift, and go to state 97

    $default  reduce using rule 55 (exprests)

    exprests  go to state 132
    exprest   go to state 133


State 109

   40 exp: ID LP explist • RP

    RP  shift, and go to state 134


State 110

   41 exp: ID exp RP •

    $default  reduce using rule 41 (exp)


State 111

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   34    | exp AND exp •  [AND, OR, RSP, RP, SEMI, COMMA, DOT]
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 34 (exp)]
    $default  reduce using rule 34 (exp)

    Conflict between rule 34 and token AND resolved as reduce (%left AND).
    Conflict between rule 34 and token OR resolved as reduce (%left OR).
    Conflict between rule 34 and token LT resolved as shift (AND < LT).
    Conflict between rule 34 and token LE resolved as shift (AND < LE).
    Conflict between rule 34 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 34 and token ADD resolved as shift (AND < ADD).
    Conflict between rule 34 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 34 and token TIMES resolved as shift (AND < TIMES).

    shift/reduce conflict on token DOT:
       34 exp: exp AND exp •
       42 exp: exp • DOT exp
      Example: exp AND exp • DOT exp
      Shift derivation
        exp
        ↳ 34: exp AND exp
                      ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                 DOT exp
              ↳ 34: exp AND exp •



State 112

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   35    | exp OR exp •  [AND, OR, RSP, RP, SEMI, COMMA, DOT]
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 35 (exp)]
    $default  reduce using rule 35 (exp)

    Conflict between rule 35 and token AND resolved as reduce (%left AND).
    Conflict between rule 35 and token OR resolved as reduce (%left OR).
    Conflict between rule 35 and token LT resolved as shift (OR < LT).
    Conflict between rule 35 and token LE resolved as shift (OR < LE).
    Conflict between rule 35 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 35 and token ADD resolved as shift (OR < ADD).
    Conflict between rule 35 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 35 and token TIMES resolved as shift (OR < TIMES).

    shift/reduce conflict on token DOT:
       35 exp: exp OR exp •
       42 exp: exp • DOT exp
      Example: exp OR exp • DOT exp
      Shift derivation
        exp
        ↳ 35: exp OR exp
                     ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                DOT exp
              ↳ 35: exp OR exp •



State 113

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   36    | exp LT exp •  [AND, OR, LT, LE, EQ, RSP, RP, SEMI, COMMA, DOT]
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 36 (exp)]
    $default  reduce using rule 36 (exp)

    Conflict between rule 36 and token AND resolved as reduce (AND < LT).
    Conflict between rule 36 and token OR resolved as reduce (OR < LT).
    Conflict between rule 36 and token LT resolved as reduce (%left LT).
    Conflict between rule 36 and token LE resolved as reduce (%left LE).
    Conflict between rule 36 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 36 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 36 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 36 and token TIMES resolved as shift (LT < TIMES).

    shift/reduce conflict on token DOT:
       36 exp: exp LT exp •
       42 exp: exp • DOT exp
      Example: exp LT exp • DOT exp
      Shift derivation
        exp
        ↳ 36: exp LT exp
                     ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                DOT exp
              ↳ 36: exp LT exp •



State 114

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   37    | exp LE exp •  [AND, OR, LT, LE, EQ, RSP, RP, SEMI, COMMA, DOT]
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 37 (exp)]
    $default  reduce using rule 37 (exp)

    Conflict between rule 37 and token AND resolved as reduce (AND < LE).
    Conflict between rule 37 and token OR resolved as reduce (OR < LE).
    Conflict between rule 37 and token LT resolved as reduce (%left LT).
    Conflict between rule 37 and token LE resolved as reduce (%left LE).
    Conflict between rule 37 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 37 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 37 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 37 and token TIMES resolved as shift (LE < TIMES).

    shift/reduce conflict on token DOT:
       37 exp: exp LE exp •
       42 exp: exp • DOT exp
      Example: exp LE exp • DOT exp
      Shift derivation
        exp
        ↳ 37: exp LE exp
                     ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                DOT exp
              ↳ 37: exp LE exp •



State 115

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   38    | exp EQ exp •  [AND, OR, LT, LE, EQ, RSP, RP, SEMI, COMMA, DOT]
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 38 (exp)]
    $default  reduce using rule 38 (exp)

    Conflict between rule 38 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 38 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 38 and token LT resolved as reduce (%left LT).
    Conflict between rule 38 and token LE resolved as reduce (%left LE).
    Conflict between rule 38 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 38 and token ADD resolved as shift (EQ < ADD).
    Conflict between rule 38 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 38 and token TIMES resolved as shift (EQ < TIMES).

    shift/reduce conflict on token DOT:
       38 exp: exp EQ exp •
       42 exp: exp • DOT exp
      Example: exp EQ exp • DOT exp
      Shift derivation
        exp
        ↳ 38: exp EQ exp
                     ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                DOT exp
              ↳ 38: exp EQ exp •



State 116

   31 exp: exp • ADD exp
   31    | exp ADD exp •  [AND, OR, LT, LE, EQ, ADD, MINUS, RSP, RP, SEMI, COMMA, DOT]
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 31 (exp)]
    $default  reduce using rule 31 (exp)

    Conflict between rule 31 and token AND resolved as reduce (AND < ADD).
    Conflict between rule 31 and token OR resolved as reduce (OR < ADD).
    Conflict between rule 31 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 31 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 31 and token EQ resolved as reduce (EQ < ADD).
    Conflict between rule 31 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 31 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 31 and token TIMES resolved as shift (ADD < TIMES).

    shift/reduce conflict on token DOT:
       31 exp: exp ADD exp •
       42 exp: exp • DOT exp
      Example: exp ADD exp • DOT exp
      Shift derivation
        exp
        ↳ 31: exp ADD exp
                      ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                 DOT exp
              ↳ 31: exp ADD exp •



State 117

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   32    | exp MINUS exp •  [AND, OR, LT, LE, EQ, ADD, MINUS, RSP, RP, SEMI, COMMA, DOT]
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    DOT       [reduce using rule 32 (exp)]
    $default  reduce using rule 32 (exp)

    Conflict between rule 32 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 32 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 32 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 32 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 32 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 32 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 32 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 32 and token TIMES resolved as shift (MINUS < TIMES).

    shift/reduce conflict on token DOT:
       32 exp: exp MINUS exp •
       42 exp: exp • DOT exp
      Example: exp MINUS exp • DOT exp
      Shift derivation
        exp
        ↳ 32: exp MINUS exp
                        ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                   DOT exp
              ↳ 32: exp MINUS exp •



State 118

   20 type: ID •  [ID]
   25 stmt: ID • ASSIGN exp SEMI
   26     | ID • LSP exp RSP ASSIGN exp SEMI
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   39    | ID • LSP exp RSP
   40    | • ID LP explist RP
   40    | ID • LP explist RP
   41    | • ID exp RP
   41    | ID • exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   46    | ID •  [AND, OR, LT, LE, EQ, ADD, MINUS, TIMES, RSP, RP, SEMI, COMMA, DOT]
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    LSP     shift, and go to state 135
    LP      shift, and go to state 85
    ASSIGN  shift, and go to state 76
    THIS    shift, and go to state 64
    NEW     shift, and go to state 65
    ID      shift, and go to state 66
    LIT     shift, and go to state 67
    TRUE    shift, and go to state 68
    FALSE   shift, and go to state 69
    NOT     shift, and go to state 70

    ID        [reduce using rule 20 (type)]
    $default  reduce using rule 46 (exp)

    exp  go to state 86

    shift/reduce conflict on token ID:
       20 type: ID •
       39 exp: • ID LSP exp RSP
      First example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID LSP exp RSP RP RP RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                              $end
             ↳ 1: mainc                                                                                                                                  cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmt                                                           RBP RBP
                                                                                  ↳ 28: LP exp                                                RP
                                                                                           ↳ 33: exp TIMES exp
                                                                                                           ↳ 41: ID exp                    RP
                                                                                                                    ↳ 39: • ID LSP exp RSP
      Second example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID SEMI RP stmts RBP RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                     $end
             ↳ 1: mainc                                                                                                                                         cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts                                                                 RBP RBP
                                                                                  ↳ 29: stmt                                                      stmts
                                                                                        ↳ 28: LP exp                                           RP
                                                                                                 ↳ 51: exp TIMES stmt
                                                                                                                 ↳ 27: vdcl
                                                                                                                       ↳ 9: type       ID SEMI
                                                                                                                            ↳ 20: ID •

    shift/reduce conflict on token ID:
       20 type: ID •
       40 exp: • ID LP explist RP
      First example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID LP explist RP RP RP RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                                $end
             ↳ 1: mainc                                                                                                                                    cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmt                                                             RBP RBP
                                                                                  ↳ 28: LP exp                                                  RP
                                                                                           ↳ 33: exp TIMES exp
                                                                                                           ↳ 41: ID exp                      RP
                                                                                                                    ↳ 40: • ID LP explist RP
      Second example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID SEMI RP stmts RBP RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                     $end
             ↳ 1: mainc                                                                                                                                         cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts                                                                 RBP RBP
                                                                                  ↳ 29: stmt                                                      stmts
                                                                                        ↳ 28: LP exp                                           RP
                                                                                                 ↳ 51: exp TIMES stmt
                                                                                                                 ↳ 27: vdcl
                                                                                                                       ↳ 9: type       ID SEMI
                                                                                                                            ↳ 20: ID •

    shift/reduce conflict on token ID:
       20 type: ID •
       41 exp: • ID exp RP
      First example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID exp RP RP RP RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                         $end
             ↳ 1: mainc                                                                                                                             cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmt                                                      RBP RBP
                                                                                  ↳ 28: LP exp                                           RP
                                                                                           ↳ 33: exp TIMES exp
                                                                                                           ↳ 41: ID exp               RP
                                                                                                                    ↳ 41: • ID exp RP
      Second example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID SEMI RP stmts RBP RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                     $end
             ↳ 1: mainc                                                                                                                                         cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts                                                                 RBP RBP
                                                                                  ↳ 29: stmt                                                      stmts
                                                                                        ↳ 28: LP exp                                           RP
                                                                                                 ↳ 51: exp TIMES stmt
                                                                                                                 ↳ 27: vdcl
                                                                                                                       ↳ 9: type       ID SEMI
                                                                                                                            ↳ 20: ID •

    shift/reduce conflict on token ID:
       20 type: ID •
       46 exp: • ID
      First example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID RP RP RBP RBP cdcls $end
      Shift derivation
        $accept
        ↳ 0: prog                                                                                                                                  $end
             ↳ 1: mainc                                                                                                                      cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmt                                               RBP RBP
                                                                                  ↳ 28: LP exp                                    RP
                                                                                           ↳ 33: exp TIMES exp
                                                                                                           ↳ 41: ID exp        RP
                                                                                                                    ↳ 46: • ID
      Second example: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP LP exp TIMES ID • ID SEMI RP stmts RBP RBP cdcls $end
      Reduce derivation
        $accept
        ↳ 0: prog                                                                                                                                                     $end
             ↳ 1: mainc                                                                                                                                         cdcls
                  ↳ 3: CLASS ID LBP PUB STATIC VOID MAIN LP STR LSP RSP ID RP LBP stmts                                                                 RBP RBP
                                                                                  ↳ 29: stmt                                                      stmts
                                                                                        ↳ 28: LP exp                                           RP
                                                                                                 ↳ 51: exp TIMES stmt
                                                                                                                 ↳ 27: vdcl
                                                                                                                       ↳ 9: type       ID SEMI
                                                                                                                            ↳ 20: ID •



State 119

   51 exp: exp TIMES stmt •

    $default  reduce using rule 51 (exp)


State 120

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   33    | exp TIMES exp •  [AND, OR, LT, LE, EQ, ADD, MINUS, TIMES, RSP, RP, SEMI, COMMA, DOT]
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    DOT  shift, and go to state 97

    DOT       [reduce using rule 33 (exp)]
    $default  reduce using rule 33 (exp)

    Conflict between rule 33 and token AND resolved as reduce (AND < TIMES).
    Conflict between rule 33 and token OR resolved as reduce (OR < TIMES).
    Conflict between rule 33 and token LT resolved as reduce (LT < TIMES).
    Conflict between rule 33 and token LE resolved as reduce (LE < TIMES).
    Conflict between rule 33 and token EQ resolved as reduce (EQ < TIMES).
    Conflict between rule 33 and token ADD resolved as reduce (ADD < TIMES).
    Conflict between rule 33 and token MINUS resolved as reduce (MINUS < TIMES).
    Conflict between rule 33 and token TIMES resolved as reduce (%left TIMES).

    shift/reduce conflict on token DOT:
       33 exp: exp TIMES exp •
       42 exp: exp • DOT exp
      Example: exp TIMES exp • DOT exp
      Shift derivation
        exp
        ↳ 33: exp TIMES exp
                        ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                   DOT exp
              ↳ 33: exp TIMES exp •



State 121

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   42    | exp DOT exp •  [AND, OR, LT, LE, EQ, ADD, MINUS, TIMES, RSP, RP, SEMI, COMMA, DOT]
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    AND       [reduce using rule 42 (exp)]
    OR        [reduce using rule 42 (exp)]
    LT        [reduce using rule 42 (exp)]
    LE        [reduce using rule 42 (exp)]
    EQ        [reduce using rule 42 (exp)]
    ADD       [reduce using rule 42 (exp)]
    MINUS     [reduce using rule 42 (exp)]
    TIMES     [reduce using rule 42 (exp)]
    DOT       [reduce using rule 42 (exp)]
    $default  reduce using rule 42 (exp)

    shift/reduce conflict on token ADD:
       42 exp: exp DOT exp •
       31 exp: exp • ADD exp
      Example: exp DOT exp • ADD exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 31: exp • ADD exp
      Reduce derivation
        exp
        ↳ 31: exp                 ADD exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token MINUS:
       42 exp: exp DOT exp •
       32 exp: exp • MINUS exp
      Example: exp DOT exp • MINUS exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 32: exp • MINUS exp
      Reduce derivation
        exp
        ↳ 32: exp                 MINUS exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token TIMES:
       42 exp: exp DOT exp •
       33 exp: exp • TIMES exp
      Example: exp DOT exp • TIMES exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 33: exp • TIMES exp
      Reduce derivation
        exp
        ↳ 33: exp                 TIMES exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token AND:
       42 exp: exp DOT exp •
       34 exp: exp • AND exp
      Example: exp DOT exp • AND exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 34: exp • AND exp
      Reduce derivation
        exp
        ↳ 34: exp                 AND exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token OR:
       42 exp: exp DOT exp •
       35 exp: exp • OR exp
      Example: exp DOT exp • OR exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 35: exp • OR exp
      Reduce derivation
        exp
        ↳ 35: exp                 OR exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token LT:
       42 exp: exp DOT exp •
       36 exp: exp • LT exp
      Example: exp DOT exp • LT exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 36: exp • LT exp
      Reduce derivation
        exp
        ↳ 36: exp                 LT exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token LE:
       42 exp: exp DOT exp •
       37 exp: exp • LE exp
      Example: exp DOT exp • LE exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 37: exp • LE exp
      Reduce derivation
        exp
        ↳ 37: exp                 LE exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token EQ:
       42 exp: exp DOT exp •
       38 exp: exp • EQ exp
      Example: exp DOT exp • EQ exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 38: exp • EQ exp
      Reduce derivation
        exp
        ↳ 38: exp                 EQ exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token DOT:
       42 exp: exp DOT exp •
       42 exp: exp • DOT exp
      Example: exp DOT exp • DOT exp
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 42: exp • DOT exp
      Reduce derivation
        exp
        ↳ 42: exp                 DOT exp
              ↳ 42: exp DOT exp •

    shift/reduce conflict on token TIMES:
       42 exp: exp DOT exp •
       51 exp: exp • TIMES stmt
      Example: exp DOT exp • TIMES stmt
      Shift derivation
        exp
        ↳ 42: exp DOT exp
                      ↳ 51: exp • TIMES stmt
      Reduce derivation
        exp
        ↳ 51: exp                 TIMES stmt
              ↳ 42: exp DOT exp •



State 122

    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   22     | IF LP exp RP • stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    vdcl  go to state 58
    type  go to state 20
    stmt  go to state 136


State 123

    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   23     | • WHILE LP exp RP stmt
   23     | WHILE LP exp RP • stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    vdcl  go to state 58
    type  go to state 20
    stmt  go to state 137


State 124

   24 stmt: PRINT LP exp RP • SEMI

    SEMI  shift, and go to state 138


State 125

   26 stmt: ID LSP exp RSP • ASSIGN exp SEMI

    ASSIGN  shift, and go to state 139


State 126

   25 stmt: ID ASSIGN exp SEMI •

    $default  reduce using rule 25 (stmt)


State 127

   12 mdcl: PUB type ID LP formals RP LBP vdcls stmts RETURN exp SEMI • RBP

    RBP  shift, and go to state 140


State 128

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   48    | NEW INT LSP exp • RSP
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RSP    shift, and go to state 141
    DOT    shift, and go to state 97


State 129

   49 exp: NEW ID LP RP •

    $default  reduce using rule 49 (exp)


State 130

   39 exp: ID LSP exp RSP •

    $default  reduce using rule 39 (exp)


State 131

   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt
   56 exprest: COMMA • exp

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 142


State 132

   52 explist: exp exprests •

    $default  reduce using rule 52 (explist)


State 133

   54 exprests: • exprest exprests
   54         | exprest • exprests
   55         | ε •  [RP]
   56 exprest: • COMMA exp

    COMMA  shift, and go to state 131

    $default  reduce using rule 55 (exprests)

    exprests  go to state 143
    exprest   go to state 133


State 134

   40 exp: ID LP explist RP •

    $default  reduce using rule 40 (exp)


State 135

   26 stmt: ID LSP • exp RSP ASSIGN exp SEMI
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   39    | ID LSP • exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 144


State 136

   22 stmt: IF LP exp RP stmt • ELSE stmt

    ELSE  shift, and go to state 145


State 137

   23 stmt: WHILE LP exp RP stmt •

    $default  reduce using rule 23 (stmt)


State 138

   24 stmt: PRINT LP exp RP SEMI •

    $default  reduce using rule 24 (stmt)


State 139

   26 stmt: ID LSP exp RSP ASSIGN • exp SEMI
   31 exp: • exp ADD exp
   32    | • exp MINUS exp
   33    | • exp TIMES exp
   34    | • exp AND exp
   35    | • exp OR exp
   36    | • exp LT exp
   37    | • exp LE exp
   38    | • exp EQ exp
   39    | • ID LSP exp RSP
   40    | • ID LP explist RP
   41    | • ID exp RP
   42    | • exp DOT exp
   43    | • LIT
   44    | • TRUE
   45    | • FALSE
   46    | • ID
   47    | • THIS
   48    | • NEW INT LSP exp RSP
   49    | • NEW ID LP RP
   50    | • NOT exp
   51    | • exp TIMES stmt

    THIS   shift, and go to state 64
    NEW    shift, and go to state 65
    ID     shift, and go to state 66
    LIT    shift, and go to state 67
    TRUE   shift, and go to state 68
    FALSE  shift, and go to state 69
    NOT    shift, and go to state 70

    exp  go to state 146


State 140

   12 mdcl: PUB type ID LP formals RP LBP vdcls stmts RETURN exp SEMI RBP •

    $default  reduce using rule 12 (mdcl)


State 141

   48 exp: NEW INT LSP exp RSP •

    $default  reduce using rule 48 (exp)


State 142

   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt
   56 exprest: COMMA exp •  [RP, COMMA]

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    DOT    shift, and go to state 97

    $default  reduce using rule 56 (exprest)


State 143

   54 exprests: exprest exprests •

    $default  reduce using rule 54 (exprests)


State 144

   26 stmt: ID LSP exp • RSP ASSIGN exp SEMI
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   39    | ID LSP exp • RSP
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    RSP    shift, and go to state 147
    DOT    shift, and go to state 97


State 145

    9 vdcl: • type ID SEMI
   17 type: • INT LSP RSP
   18     | • BOOLEAN
   19     | • INT
   20     | • ID
   21 stmt: • LBP stmts RBP
   22     | • IF LP exp RP stmt ELSE stmt
   22     | IF LP exp RP stmt ELSE • stmt
   23     | • WHILE LP exp RP stmt
   24     | • PRINT LP exp RP SEMI
   25     | • ID ASSIGN exp SEMI
   26     | • ID LSP exp RSP ASSIGN exp SEMI
   27     | • vdcl
   28     | • LP exp RP

    LBP      shift, and go to state 52
    LP       shift, and go to state 53
    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    IF       shift, and go to state 54
    WHILE    shift, and go to state 55
    PRINT    shift, and go to state 56
    ID       shift, and go to state 57

    vdcl  go to state 58
    type  go to state 20
    stmt  go to state 148


State 146

   26 stmt: ID LSP exp RSP ASSIGN exp • SEMI
   31 exp: exp • ADD exp
   32    | exp • MINUS exp
   33    | exp • TIMES exp
   34    | exp • AND exp
   35    | exp • OR exp
   36    | exp • LT exp
   37    | exp • LE exp
   38    | exp • EQ exp
   42    | exp • DOT exp
   51    | exp • TIMES stmt

    AND    shift, and go to state 88
    OR     shift, and go to state 89
    LT     shift, and go to state 90
    LE     shift, and go to state 91
    EQ     shift, and go to state 92
    ADD    shift, and go to state 93
    MINUS  shift, and go to state 94
    TIMES  shift, and go to state 95
    SEMI   shift, and go to state 149
    DOT    shift, and go to state 97


State 147

   26 stmt: ID LSP exp RSP • ASSIGN exp SEMI
   39 exp: ID LSP exp RSP •  [AND, OR, LT, LE, EQ, ADD, MINUS, TIMES, RSP, RP, SEMI, COMMA, DOT]

    ASSIGN  shift, and go to state 139

    $default  reduce using rule 39 (exp)


State 148

   22 stmt: IF LP exp RP stmt ELSE stmt •

    $default  reduce using rule 22 (stmt)


State 149

   26 stmt: ID LSP exp RSP ASSIGN exp SEMI •

    $default  reduce using rule 26 (stmt)
